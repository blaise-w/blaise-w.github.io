{"ast":null,"code":"var _jsxFileName = \"/Users/blaise/study-buddies/frontend/src/components/Calendar.js\";\nimport React, { useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = ({\n  availability,\n  setAvailability\n}) => {\n  const handleDateClick = info => {\n    const clickedDate = info.dateStr;\n    let updatedAvailability;\n    if (availability.includes(clickedDate)) {\n      updatedAvailability = availability.filter(date => date !== clickedDate);\n    } else {\n      updatedAvailability = [...availability, clickedDate];\n    }\n    setAvailability(updatedAvailability);\n  };\n  return /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [dayGridPlugin],\n    initialView: \"dayGridMonth\",\n    dateClick: handleDateClick,\n    events: availability.map(date => ({\n      title: 'Available',\n      date\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","FullCalendar","dayGridPlugin","jsxDEV","_jsxDEV","Calendar","availability","setAvailability","handleDateClick","info","clickedDate","dateStr","updatedAvailability","includes","filter","date","plugins","initialView","dateClick","events","map","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/blaise/study-buddies/frontend/src/components/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport '../styles.css';\n\nconst Calendar = ({ availability, setAvailability }) => {\n  const handleDateClick = (info) => {\n    const clickedDate = info.dateStr;\n    let updatedAvailability;\n\n    if (availability.includes(clickedDate)) {\n      updatedAvailability = availability.filter(date => date !== clickedDate);\n    } else {\n      updatedAvailability = [...availability, clickedDate];\n    }\n\n    setAvailability(updatedAvailability);\n  };\n\n  return (\n    <FullCalendar\n      plugins={[dayGridPlugin]}\n      initialView=\"dayGridMonth\"\n      dateClick={handleDateClick}\n      events={availability.map(date => ({ title: 'Available', date }))}\n    />\n  );\n};\n\nexport default Calendar;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,KAAK;EACtD,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChC,MAAMC,WAAW,GAAGD,IAAI,CAACE,OAAO;IAChC,IAAIC,mBAAmB;IAEvB,IAAIN,YAAY,CAACO,QAAQ,CAACH,WAAW,CAAC,EAAE;MACtCE,mBAAmB,GAAGN,YAAY,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKL,WAAW,CAAC;IACzE,CAAC,MAAM;MACLE,mBAAmB,GAAG,CAAC,GAAGN,YAAY,EAAEI,WAAW,CAAC;IACtD;IAEAH,eAAe,CAACK,mBAAmB,CAAC;EACtC,CAAC;EAED,oBACER,OAAA,CAACH,YAAY;IACXe,OAAO,EAAE,CAACd,aAAa,CAAE;IACzBe,WAAW,EAAC,cAAc;IAC1BC,SAAS,EAAEV,eAAgB;IAC3BW,MAAM,EAAEb,YAAY,CAACc,GAAG,CAACL,IAAI,KAAK;MAAEM,KAAK,EAAE,WAAW;MAAEN;IAAK,CAAC,CAAC;EAAE;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEN,CAAC;AAACC,EAAA,GAtBIrB,QAAQ;AAwBd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}